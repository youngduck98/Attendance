type Query{
    findAttendanceByDateAndUser(userUuid:ID!, date:String!): Attendance
    login(info:LoginInfo): Token
}

type Mutation{
    postTodayStartLog(userUuid:ID!, time:String!): Result
    updateTodayEndLog(userUuid:ID!, time:String!): Result
    updateDateUrl(userUuid:ID!, date:String!, url:String!): Result
    joinMembership(info:MemberInfo!): Result
}

input MemberInfo{
    id: ID!
    password: ID!
}

input LoginInfo{
    id: ID!
    password: ID!
}

type Token{
    valid: Result
    contents: ID!
}

type Result{
    result: Boolean!
    reason: String
}

type Attendance{
    valid: Result
    startTime: String
    endTime: String
    url: String
}